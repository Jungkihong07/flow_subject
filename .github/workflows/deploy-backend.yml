name: Deploy Backend to App Engine

on:
  push:
    branches: [main]
    paths: ["backend/**"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x backend/gradlew

      - name: Run tests
        run: |
          cd backend
          ./gradlew test

      - name: Build application
        run: |
          cd backend
          ./gradlew build -x test

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Create app.yaml with environment variables
        run: |
          cd backend
          cat > app-deploy.yaml << EOF
          runtime: java21
          env_variables:
            SPRING_PROFILES_ACTIVE: "prod"
            DB_USERNAME: "${{ secrets.DB_USERNAME }}"
            DB_PASSWORD: "${{ secrets.DB_PASSWORD }}"
            CLOUD_SQL_CONNECTION_NAME: "${{ secrets.CLOUD_SQL_CONNECTION_NAME }}"
            CLOUD_SQL_DATABASE: "${{ secrets.CLOUD_SQL_DATABASE }}"
          EOF
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

      - name: Verify environment variables
        run: |
          echo "Checking required environment variables..."
          if [ -z "${{ secrets.DB_USERNAME }}" ]; then
            echo "❌ DB_USERNAME is not set"
            exit 1
          fi
          if [ -z "${{ secrets.DB_PASSWORD }}" ]; then
            echo "❌ DB_PASSWORD is not set"
            exit 1
          fi
          if [ -z "${{ secrets.CLOUD_SQL_CONNECTION_NAME }}" ]; then
            echo "❌ CLOUD_SQL_CONNECTION_NAME is not set"
            exit 1
          fi
          if [ -z "${{ secrets.CLOUD_SQL_DATABASE }}" ]; then
            echo "❌ CLOUD_SQL_DATABASE is not set"
            exit 1
          fi
          echo "✅ All required environment variables are set"
          echo "CLOUD_SQL_CONNECTION_NAME: ${{ secrets.CLOUD_SQL_CONNECTION_NAME }}"
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

      - name: Verify app-deploy.yaml
        run: |
          cd backend
          echo "Generated app-deploy.yaml content:"
          cat app-deploy.yaml
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

      - name: Deploy to App Engine
        run: |
          cd backend
          echo "Deploying with minimal configuration..."
          gcloud app deploy app-deploy.yaml --quiet --no-promote
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}

      - name: Promote deployment
        run: |
          cd backend
          echo "Promoting deployment..."
          gcloud app services set-traffic default --splits=20251023t172802=1 --quiet
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        continue-on-error: true
