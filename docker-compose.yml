services:
  # PostgreSQL 데이터베이스
  db:
    image: postgres:16-alpine
    container_name: extension-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-extensiondb}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - extension-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-extensiondb}"]
      interval: 10s
      timeout: 5s
      retries: 5
    # 외부 포트 노출 안 함 (보안)

  # Spring Boot 백엔드 애플리케이션
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: extension-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_NAME: ${DB_NAME:-extensiondb}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db
      DB_PORT: 5432
    depends_on:
      db:
        condition: service_healthy
    networks:
      - extension-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  extension-network:
    driver: bridge